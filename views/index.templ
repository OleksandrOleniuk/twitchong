package views

import "strings"

type FormValueStruct struct {
	responceType      string
	redirectUri       string
	clientId          string
	twitchSecretState string
	scope             []string
}

var twitchScopes = []string{
	"channel:manage:polls",
	"channel:read:polls",
	"channel:read:redemptions",
	"channel:manage:redemptions",
	"moderator:read:chatters",
	"moderator:manage:chat_messages",
	"chat:read",
	"chat:edit",
	"channel:moderate",
	"channel:read:subscriptions",
	"user:bot",
	"user:read:chat",
	"user:write:chat",
}

var formValue = FormValueStruct{}

templ formTemplate(clientId string, twitchSecretState string) {
	{{
defaultFormValue := FormValueStruct{
	responceType:      "token",
	redirectUri:       "http://localhost:3000/twitch/callback",
	clientId:          clientId,
	twitchSecretState: twitchSecretState,
	scope:             []string{"chat:read", "chat:edit"},
}
	}}
	<form action="https://id.twitch.tv/oauth2/authorize" method="GET" class="space-y-4">
		<div class="grid grid-cols-1 gap-4">
			<input type="hidden" name="response_type" value={ defaultFormValue.responceType }/>
			<div>
				<label class="block text-sm font-medium text-gray-700 mb-1">Client ID</label>
				<input
					type="text"
					name="client_id"
					id="client_id"
					value={ defaultFormValue.clientId }
					class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#6441a5] focus:border-[#6441a5]"
					readonly
				/>
			</div>
			<div>
				<label class="block text-sm font-medium text-gray-700 mb-1">Redirect URI</label>
				<input
					type="text"
					name="redirect_uri"
					id="redirect_uri"
					value={ defaultFormValue.redirectUri }
					class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#6441a5] focus:border-[#6441a5]"
					readonly
				/>
			</div>
			<div>
				<label class="block text-sm font-medium text-gray-700 mb-1">Scope</label>
				<div class="space-y-2 p-3 border border-gray-300 rounded-md" id="scope_container">
					for _, item:=range twitchScopes {
						<div class="flex flex-row-reverse justify-end items-center">
							<label class="ml-2 block text-sm text-gray-700">{ item }</label>
							<input
								class="h-4 w-4 text-[#6441a5] focus:ring-[#6441a5] border-gray-300 rounded"
								type="checkbox"
								name="scope_checkbox"
								value={ item }
								onchange={ templ.JSFuncCall("onScopeValueChange",
						templ.JSExpression("event")) }
							/>
						</div>
					}
				</div>
				<input type="hidden" name="scope" id="scope_value" value={ strings.Join(defaultFormValue.scope, " ") }/>
			</div>
			<input type="hidden" name="state" id="state_value" value={ defaultFormValue.twitchSecretState }/>
		</div>
		<div class="text-center mt-6">
			<button
				type="submit"
				class="bg-[#6441a5] text-white px-6 py-3 rounded hover:bg-[#7d5bbe] transition-colors duration-300"
			>
				Connect with Twitch
			</button>
		</div>
	</form>
}

templ IndexPage(clientId string, twitchSecretState string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Twitchong</title>
			<link rel="stylesheet" href="/index.min.css"/>
			<script src="/index.js"></script>
		</head>
		<body class="bg-gray-100 p-5">
			<div class="max-w-2xl mx-auto bg-white p-5 rounded-lg shadow-md">
				<h1 class="text-3xl font-bold text-center text-[#6441a5] mb-5">Twitchong</h1>
				<div class="text-center p-3 mb-5 bg-blue-50 text-blue-700 rounded">
					Server is running and ready!
				</div>
				<div class="mt-8">
					@formTemplate(clientId, twitchSecretState)
				</div>
			</div>
		</body>
	</html>
}
